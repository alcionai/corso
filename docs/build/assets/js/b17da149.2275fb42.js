"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[82],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),h=o,g=d["".concat(s,".").concat(h)]||d[h]||p[h]||r;return t?i.createElement(g,a(a({ref:n},u),{},{components:t})):i.createElement(g,a({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},916:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(7462),o=(t(7294),t(3905));t(8209);const r={},a="Corso linters",l={unversionedId:"developers/linters",id:"developers/linters",title:"Corso linters",description:"Corso uses the golangci-lint GitHub action to run linters on every PR to main.",source:"@site/docs/developers/linters.md",sourceDirName:"developers",slug:"/developers/linters",permalink:"/docs/developers/linters",draft:!1,editUrl:"https://github.com/alcionai/corso/tree/main/docs/docs/developers/linters.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Installing golangci-lint locally",id:"installing-golangci-lint-locally",level:2},{value:"Running the linter",id:"running-the-linter",level:2},{value:"Running with the <code>Makefile</code>",id:"running-with-the-makefile",level:3},{value:"Running manually",id:"running-manually",level:3},{value:"Adding exceptions for lint errors",id:"adding-exceptions-for-lint-errors",level:2},{value:"Single exception via comment",id:"single-exception-via-comment",level:3},{value:"Global exception",id:"global-exception",level:3},{value:"Working with the linters",id:"working-with-the-linters",level:2},{value:"<code>wsl</code>",id:"wsl",level:3},{value:"Short-assignments versus var declarations",id:"short-assignments-versus-var-declarations",level:4},{value:"Post-increment and assignments",id:"post-increment-and-assignments",level:4},{value:"Functions using recently assigned values",id:"functions-using-recently-assigned-values",level:4},{value:"Function calls and checking returned error values",id:"function-calls-and-checking-returned-error-values",level:4},{value:"Common problem linters",id:"common-problem-linters",level:2},{value:"<code>gci</code> <code>Expected &#39;s&#39;, Found &#39;a&#39; at file.go</code>",id:"gci-expected-s-found-a-at-filego",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"corso-linters"},"Corso linters"),(0,o.kt)("p",null,"Corso uses the golangci-lint GitHub action to run linters on every PR to ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),".\nThis helps reduce the cognitive load on reviewers and can lead to better\nreviewer comments as they don\u2019t get caught up with formatting issues."),(0,o.kt)("h2",{id:"installing-golangci-lint-locally"},"Installing golangci-lint locally"),(0,o.kt)("p",null,"You can install a local version of the linter Corso uses on any platform and\nthere's also a docker container available. Instructions for installation are\navailable on the golangci-lint\n",(0,o.kt)("a",{parentName:"p",href:"https://golangci-lint.run/usage/install/#local-installation"},"website"),". The\nversion that you install should match the version the GitHub workflow uses to\navoid failures even after running locally. The current version in use can be\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/alcionai/corso/blob/main/.github/workflows/lint.yml#L55"},"found"),"\nin ",(0,o.kt)("inlineCode",{parentName:"p"},".github/worflows/lint.yaml"),"."),(0,o.kt)("h2",{id:"running-the-linter"},"Running the linter"),(0,o.kt)("p",null,"You can run the linter manually or with the ",(0,o.kt)("inlineCode",{parentName:"p"},"Makefile")," in the repository. Running with\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"Makefile")," will also ensure you have the proper version of golangci-lint\ninstalled."),(0,o.kt)("h3",{id:"running-with-the-makefile"},"Running with the ",(0,o.kt)("inlineCode",{parentName:"h3"},"Makefile")),(0,o.kt)("p",null,"There\u2019s a ",(0,o.kt)("inlineCode",{parentName:"p"},"Makefile")," in the corso/src that will automatically check if the proper\ngolangci-lint version is installed and run it. This make rule can be run\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"make lint"),". If golangci-lint isn't installed locally or the wrong version\nis present it will tell you what version it expects along with a link to the\ninstallation page."),(0,o.kt)("h3",{id:"running-manually"},"Running manually"),(0,o.kt)("p",null,"You can run golangci-lint manually by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"golangci-lint run")," in the corso/src\ndirectory. This will automatically use corso's ",(0,o.kt)("inlineCode",{parentName:"p"},".golangci.yml")," configuration."),(0,o.kt)("h2",{id:"adding-exceptions-for-lint-errors"},"Adding exceptions for lint errors"),(0,o.kt)("p",null,"Sometimes the linter will report an issue but it's not something that you can or\nshould fix. In those cases there are two ways to add a linter exception:"),(0,o.kt)("h3",{id:"single-exception-via-comment"},"Single exception via comment"),(0,o.kt)("p",null,"Adding a comment on the line before (or sometimes the offending line) with the\nform ",(0,o.kt)("inlineCode",{parentName:"p"},"//nolint:<linter-name>")," will ignore a single error. ",(0,o.kt)("inlineCode",{parentName:"p"},"<linter-name>")," must\nbe replaced with the name of the linter that produced the report. Note there\u2019s\nno space between the ",(0,o.kt)("inlineCode",{parentName:"p"},"//")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nolint"),". Having a space between the two may\nresult in the linter still reporting that line."),(0,o.kt)("h3",{id:"global-exception"},"Global exception"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"golangci.yml")," file has a list of issues that are ignored in the whole\nproject. These should be as targeted as possible to avoid silencing other lint\nerrors that aren't related to the one in question. The golangci-lint\n",(0,o.kt)("a",{parentName:"p",href:"https://golangci-lint.run/usage/configuration/#issues-configuration"},"issues configuration page"),"\nhas some information on this, but it's also useful to look at\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/alcionai/corso/blob/main/src/.golangci.yml"},"existing exceptions"),"\nin the repository under the ",(0,o.kt)("inlineCode",{parentName:"p"},"issues")," section."),(0,o.kt)("p",null,"The configuration file allows for regex in the text property, so it\u2019s useful to include\nthe linter/rule that triggered the message. This ensures the lint error is only\nignored for that linter. Combining the linter/rule with the error message text\nspecific to that error also helps minimize collisions with other lint errors."),(0,o.kt)("h2",{id:"working-with-the-linters"},"Working with the linters"),(0,o.kt)("p",null,"Some of the enabled linters, like ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl"),", are picky about how code is arranged.\nThis section provides some tips on how to organize code to reduce lint errors."),(0,o.kt)("h3",{id:"wsl"},(0,o.kt)("inlineCode",{parentName:"h3"},"wsl")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," is a linter that requires blank lines in parts of the code. It helps make\nthe codebase uniform and ensures the code doesn't feel too compact."),(0,o.kt)("h4",{id:"short-assignments-versus-var-declarations"},"Short-assignments versus var declarations"),(0,o.kt)("p",null,"Go allows declaring and assigning to a variable with either short-assignments\n(",(0,o.kt)("inlineCode",{parentName:"p"},"x := 42"),") or var assignments (",(0,o.kt)("inlineCode",{parentName:"p"},"var x = 42"),"). ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," doesn't allow\ngrouping these two types of variable declarations together. To work around this,\nyou can convert all your declarations to one type or the other. Converting to\nshort-assignments only works if the types in question have accessible and\nsuitable default values."),(0,o.kt)("p",null,"For example, the mixed set of declarations and assignments:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var err error\nx := 42\n")),(0,o.kt)("p",null,"should be changed to the following because using a short-assignment for type\n",(0,o.kt)("inlineCode",{parentName:"p"},"error")," is cumbersome."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var (\n    err error\n    x = 42\n)\n")),(0,o.kt)("h4",{id:"post-increment-and-assignments"},"Post-increment and assignments"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," doesn't allow statements before an assignment without a blank line\nseparating the two. Post-increment operators (e.x. ",(0,o.kt)("inlineCode",{parentName:"p"},"x++"),") count as statements\ninstead of assignments and may cause ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," to report an error. You can avoid\nthis by moving the post-increment operator to be after the assignment instead of\nbefore it if the assignment doesn't depend on the increment operation."),(0,o.kt)("p",null,"For example, the snippet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"x++\nfound = true\n")),(0,o.kt)("p",null,"should be converted to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"found = true\nx++\n")),(0,o.kt)("h4",{id:"functions-using-recently-assigned-values"},"Functions using recently assigned values"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," allows functions immediately after assignments, but only if the function\nuses the assigned value. This requires an ordering for assignments and\nfunction calls."),(0,o.kt)("p",null,"For example, the following code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"a := 7\nb := 42\nfoo(a)\n")),(0,o.kt)("p",null,"should be changed to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"b := 42\na := 7\nfoo(a)\n")),(0,o.kt)("p",null,"If both the second assignment and function call depend on the value of the first\nassignment then the assignments and function call must be separated by a blank\nline."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"a := 7\nb := a + 35\n\nfoo(a, b)\n")),(0,o.kt)("h4",{id:"function-calls-and-checking-returned-error-values"},"Function calls and checking returned error values"),(0,o.kt)("p",null,"One of the other linters expects error checks to follow assignments to the error\nvariable without blank lines separating the two. One the other hand, ",(0,o.kt)("inlineCode",{parentName:"p"},"wsl")," has\nrequirements about what statements can be mixed with assignments. To work\naround this, you should separate assignments that involve an error from other\nassignments. For example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"a := 7\nb := 42\nc, err := foo()\nif err != nil {\n  ...\n}\n")),(0,o.kt)("p",null,"should be changed to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"a := 7\nb := 42\n\nc, err := foo()\nif err != nil {\n  ...\n}\n")),(0,o.kt)("h2",{id:"common-problem-linters"},"Common problem linters"),(0,o.kt)("p",null,"Some linter messages aren't clear about what the issue is. Here's common\ncryptic messages how you can fix the problems the linters flag.\nEach subsection also includes the version of golangci-lint it applies to and the\nlinter in question."),(0,o.kt)("h3",{id:"gci-expected-s-found-a-at-filego"},(0,o.kt)("inlineCode",{parentName:"h3"},"gci")," ",(0,o.kt)("inlineCode",{parentName:"h3"},"Expected 's', Found 'a' at file.go")),(0,o.kt)("p",null,"This applies to golangci-lint v1.45.2 for the ",(0,o.kt)("inlineCode",{parentName:"p"},"gci")," linter and is due to an import\nordering issue. It occurs because imports in the file aren't grouped according\nto the import rules for Corso. Corso code should have three distinct import\ngroups: system imports, third party imports, and imports of other Corso packaged\n(see the example below). Typically the cause of a ",(0,o.kt)("inlineCode",{parentName:"p"},"gci")," lint error is a Corso import in the\nblock for third party libraries."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "time"\n\n    "github.com/kopia/kopia"\n\n    "github.com/alcionai/corso/pkg/selector"\n)\n')))}p.isMDXComponent=!0},8209:(e,n,t)=>{t(7294)}}]);